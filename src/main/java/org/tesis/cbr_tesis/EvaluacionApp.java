/**
 * Test8.java
 * jCOLIBRI2 framework. 
 * @author Juan A. Recio-Garcï¿½a.
 * GAIA - Group for Artificial Intelligence Applications
 * http://gaia.fdi.ucm.es
 * 07/05/2007
 */
package org.tesis.cbr_tesis;

import es.ucm.fdi.gaia.jcolibri.evaluation.Evaluator;
import es.ucm.fdi.gaia.jcolibri.evaluation.evaluators.HoldOutEvaluator;


/**
 * This example shows how to evaluate an application.
 * It uses a CBR application (a StandardCBRApplication implementation) that must store its results in the EvaluationReport.
 * 
 * @author Juan A. Recio-Garcia
 * @version 1.0
 * 
 * @see jcolibri.evaluation.Evaluator
 * @see jcolibri.evaluation.EvaluationReport
 * @see jcolibri.test.test8.EvaluableApp
 *
 */
public class EvaluacionApp {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		// SwingProgressBar shows the progress
		es.ucm.fdi.gaia.jcolibri.util.ProgressController.clear();
		es.ucm.fdi.gaia.jcolibri.util.ProgressController
				.register(new es.ucm.fdi.gaia.jcolibri.test.main.SwingProgressBar(), HoldOutEvaluator.class);

		// Example of the Leave-One-Out evaluation
		
//		LeaveOneOutEvaluator eval = new LeaveOneOutEvaluator();
//		eval.init(new EvaluableApp());
//		eval.LeaveOneOut();
		
		// Example of the Hold-Out evaluation
		
		HoldOutEvaluator eval = new HoldOutEvaluator();
		eval.init(new App());
		eval.HoldOut(5, 1);
		
		
		// Example of the Same-Split evaluation
		
		//SameSplitEvaluator eval = new SameSplitEvaluator();
		//eval.init(new EvaluableApp());
		//eval.generateSplit(5, "split1.txt");
		//eval.HoldOutfromFile("split1.txt");

		System.out.println(Evaluator.getEvaluationReport());
		es.ucm.fdi.gaia.jcolibri.evaluation.tools.EvaluationResultGUI.show(Evaluator.getEvaluationReport(),
				"App - Evaluation", false);

	}

}
