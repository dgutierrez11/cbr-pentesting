package org.tesis.cbr_tesis;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.tesis.cbr_tesis.entities.Alert;
import org.tesis.cbr_tesis.entities.AlertCase;

import es.ucm.fdi.gaia.jcolibri.cbrcore.CBRQuery;
import es.ucm.fdi.gaia.jcolibri.exception.ExecutionException;

public class MainApp {
	
	public static void main(String[] args) {
		// Launch DDBB manager
		System.out.println("Inicia ejecución");
		App appTest = App.getInstance();
		appTest.showMainFrame();
		
		try {
			appTest.configure();
			appTest.preCycle();

			
			// Consultar vulnerabilidad como query para recomendar solucion
	        Configuration hbconfig = new Configuration();
	        hbconfig.configure("org/tesis/cbr_tesis/hibernate.cfg.xml");
	        SessionFactory sessionFactory = hbconfig.buildSessionFactory();
	        
	        Session session = sessionFactory.openSession();	
	        Transaction transaction = session.beginTransaction();
	        
			@SuppressWarnings("unchecked")
			List<Alert> descList = session.createQuery("from Alert WHERE validated = :validated")
					.setParameter("validated", Boolean.FALSE).getResultList();
			
			transaction.commit();
			session.close();

			// BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
			for (Alert alert : descList) {

				/********* Query Definition **********/
				AlertCase queryDesc = new AlertCase();
				queryDesc.setName(alert.getName());
				queryDesc.setDescription(alert.getDescription());
				queryDesc.setRisk(App.getRisk(alert.getRisk()));
				queryDesc.setCwe(alert.getCwe());
				queryDesc.setCweCategory("CweCategory");
				queryDesc.setOwaspCategory("OwaspCategory");
				queryDesc.setType(alert.getType());
				// Crear campos y entidad con solution
				CBRQuery query = new CBRQuery();
				query.setDescription(queryDesc);

				App.newId = alert.getIdAlert().intValue();
				appTest.cycle(query);
				
			    App.changeValidatedCase(sessionFactory, alert);
				
				System.out.println("Cycle finished");
			}		
			appTest.postCycle();
			System.out.println("Termina ejecución");
			System.exit(1);
		} catch (ExecutionException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

}
